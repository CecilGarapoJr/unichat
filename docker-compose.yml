services:
  web:
    build: .
    image: twunhuman/unichat:latest
    tty: true
    stdin_open: true
    environment:
      - RAILS_ENV=production
      - NODE_ENV=production
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
      - MALLOC_ARENA_MAX=2
      - WEB_CONCURRENCY=2
      - RAILS_MAX_THREADS=5
      - DATABASE_URL=postgres://unichat:unichat@db:5432/unichat_production
      - REDIS_URL=redis://redis:6379/1
      - SECRET_KEY_BASE=${SECRET_KEY_BASE:-$(openssl rand -hex 64)}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health_check"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: bash -c "bundle exec rake db:migrate && bundle exec puma -C config/puma.rb"

  db:
    image: ankane/pgvector:latest
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=unichat
      - POSTGRES_PASSWORD=unichat
      - POSTGRES_INITDB_ARGS=--data-checksums
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U unichat"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ["postgres", "-c", "shared_preload_libraries=vector"]

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  postgres_data: {}
  redis_data: {}

networks:
  default:
